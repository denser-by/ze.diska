package mydev.about; import java.awt.Color; import java.awt.Component; import java.awt.Font; import java.awt.Graphics; import java.awt.Image; import java.awt.image.ImageObserver; public class Canvas implements ImageObserver { private Graphics ics; private Bitmap bitmap; public Canvas(Graphics ics) { super(); this.ics=ics;} public Canvas(Bitmap bitmap) { super(); this.bitmap=bitmap;} public void drawPoint(int x,int y,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.drawLine(x,y,x,y);}} public void drawPoint(int x,int y,int z,Paint pn) {} public void drawLine(int x,int y,int x2,int y2,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.drawLine(x,y,x2,y2);}} public void drawLine(int x,int y,int z,int x2,int y2,int z2,Paint pn) {} public void drawBitmap(Bitmap bitmap,int x,int y,Component comp,Paint pn) { if(ics !=null && comp !=null) { Image img=bitmap.getImage(comp); ics.drawImage(img,x,y,bitmap.getWidth(),bitmap.getHeight(),this);}} public void drawBitmap(int[] colors,int colorsWidth,int colorsHeight,int x,int y,int width,int height,Component comp,Paint pn) { if(ics !=null && comp !=null) { Bitmap bitmap=new Bitmap(colors,(short) colorsWidth,(short) colorsHeight); Image img=bitmap.getImage(comp); ics.drawImage(img,x,y,width,height,this);}} public void drawBitmap(int[] colors,int colorsWidth,int colorsHeight,int x,int y,int width,int height,Paint pn) { drawBitmap(colors,colorsWidth,colorsHeight,x,y,width,height,pn.comp,pn);} public void drawImage(Image img,int x,int y,int width,int height) { drawImage(img,x,y,width,height,this);} public void drawImage(Image img,int x,int y) { drawImage(img,x,y,this);} public void drawImage(Image img,int x,int y,int width,int height,ImageObserver observ) { if(ics !=null) ics.drawImage(img,x,y,width,height,observ);} public void drawImage(Image img,int x,int y,ImageObserver observ) { if(ics !=null) ics.drawImage(img,x,y,observ);} public boolean imageUpdate(Image img,int infoflags,int x,int y,int width,int height) { System.out.println("imageUpdate x="+x+" y="+y+" width="+width+" height="+height+" infoflags="+infoflags+" img="+img); return false;} public void drawText(String str,int x,int y,Paint pn) { drawText(str,x,y,pn,null);} public void drawText(String str,int x,int y,Paint pn,Font fn) { if(ics==null) ics=pn.cs1; if(ics !=null) { ics.setColor(pn.getColor()); Font prevFont=null; if(fn !=null) { prevFont=ics.getFont(); ics.setFont(fn);} int textHeight=ics.getFontMetrics().getHeight(); ics.drawString(str,x,y+textHeight / 2); if(prevFont !=null) ics.setFont(prevFont);}} public void setFont(String name,int size,int style) { ics.setFont(new Font(name,size,style));} public void fillElypsis(int x,int y,int width,int height,int angleStart,int angleDt,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.fillArc(x,y,width,height,angleStart,angleDt);}} public void drawElypsis(int x,int y,int width,int height,int angleStart,int angleDt,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.drawArc(x,y,width,height,angleStart,angleDt);}} public void drawSector(int x,int y,int r,int angleStart,int angleFinish,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.drawArc(x-r,y-r,2 * r,2 * r,angleStart,angleFinish);}} public void fillSector(int x,int y,int r,int angleStart,int angleFinish,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.fillArc(x-r,y-r,2 * r,2 * r,angleStart,angleFinish);}} public void drawCircle(int x,int y,int r,Paint pn) { drawSector(x,y,r,0,360,pn);} public void fillCircle(int x,int y,int r,Paint pn) { fillSector(x,y,r,0,360,pn);} public void fillCube(int x,int y,int z,int r,float angleX,float angleY,Paint pn) {} public void drawRect(int x,int y,int width,int height,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.drawRect(x,y,width-1,height-1);}} public void fillRect(int x,int y,int width,int height,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.fillRect(x,y,width-1,height-1);}} public void drawSquare(int x,int y,int r,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.drawRect(x-r,y-r,2 * r,2 * r);}} public void fillSquare(int x,int y,int r,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.fillRect(x-r,y-r,2 * r,2 * r);}} public void drawTriangle(int x,int y,int x2,int y2,int x3,int y3,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); int[] xx=new int[1+1+1]; xx[0]=x; xx[0+1]=x2; xx[0+1+1]=x3; int[] yy=new int[1+1+1]; yy[0]=y; yy[0+1]=y2; yy[0+1+1]=y3; ics.drawPolygon(xx,yy,1+1+1);}} public void fillTriangle(int x,int y,int x2,int y2,int x3,int y3,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); int[] xx=new int[1+1+1]; xx[0]=x; xx[0+1]=x2; xx[0+1+1]=x3; int[] yy=new int[1+1+1]; yy[0]=y; yy[0+1]=y2; yy[0+1+1]=y3; ics.fillPolygon(xx,yy,1+1+1);}} public void drawSphere(int x,int y,int z,int r,Paint pn) {} public void fillSphere(int x,int y,int z,int r,Paint pn) {} public void drawTriangle(int x,int y,int z,int x2,int y2,int z2,int x3,int y3,int z3,Paint pn) {} public void fillTriangle(int x,int y,int z,int x2,int y2,int z2,int x3,int y3,int z3,Paint pn) {} public void drawCircle3D(Point3D center,int r,Plane3D plane,Paint pn) {} public void fillCircle3D(Point3D center,int r,Plane3D plane,Paint pn) {} public void fillConture(int[] xx,int[] yy,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.fillPolygon(xx,yy,xx.length);}} public void drawPicture(int xStart,int yStart,Picture picture,Paint pn) { int transColor=pn.getColorTransparent(); Color prevColor=Picture.FON_COLOR; for(int i=0; i < picture.fhx; i++) for(int j=0; j < picture.fwx; j++) { Color curColor=picture.pvx[i * picture.fwx+j]; if(curColor==null) continue; if(transColor==curColor.getRGB()) continue; if(curColor !=prevColor) pn.setColor(curColor.getRGB()); drawPoint(xStart+j,yStart+i,pn); prevColor=curColor;}} public Canvas loadTextFont(Font font) { if(ics !=null) ics.setFont(font); return this;} public int drawTextWidth(String text) { if(ics !=null) return ics.getFontMetrics().stringWidth(text); return 0;} public int drawTextHeight(String text) { if(ics !=null) return ics.getFontMetrics().getHeight(); return 0;} public void fillConture(int[] xx,int[] yy,int[] zz,Paint pn) {} public void drawArc(int x,int y,int width,int height,int angleStart,int angleDt,Paint pn) { if(ics !=null) { ics.setColor(pn.getColor()); ics.drawArc(x,y,width,height,angleStart,angleDt);}}}