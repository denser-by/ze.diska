package mydev.about; public class Color { protected short r; protected short g; protected short b; public Color(int r,int g,int b) { super(); this.r=(short) r; this.g=(short) g; this.b=(short) b;} public Color(int rgb) { super(); java.awt.Color c1=new java.awt.Color(rgb); this.r=(short) c1.getRed(); this.g=(short) c1.getGreen(); this.b=(short) c1.getBlue();} public Color middle(Color other) { Color newColor=new Color((r+other.r) / 2,(g+other.g) / 2,(b+other.b) / 2); return newColor;} public static int rgb(int rr,int gg,int bb) { Color c1=new Color(rr,gg,bb); return c1.rgb();} public int rgb() { return new java.awt.Color(r,g,b).getRGB();} public static Color valueOf(float rr,float gg,float bb) { Color c1=new Color((int)(rr * 255),(int)(gg * 255),(int)(bb * 255)); return c1;} public int toArgb() { return rgb();} public static int middleColor(Colorfull c1,Colorfull c2) { return new Color(c1.color).middle(new Color(c2.color)).toArgb();} public static int middleColor(Colorfull c1,Colorfull c2,Colorfull c3) { return middleColor(c1,middleColor(c2,c3));} public static int middleColor(Colorfull c1,Colorfull c2,Colorfull c3,Colorfull c4) { return middleColor(middleColor(c4,c1),middleColor(c2,c3));} public static int middleColor(Colorfull c1,int c2) { return new Color(c1.color).middle(new Color(c2)).toArgb();} public static int middleColor(int c1,int c2) { return new Color(c1).middle(new Color(c2)).toArgb();} public int hashCode() { final int prime=31; int result=1; result=prime * result+b; result=prime * result+g; result=prime * result+r; return result;} public boolean equals(Object obj) { if(this==obj) return true; if(obj==null) return false; if(getClass() !=obj.getClass()) return false; Color other=(Color) obj; if(b !=other.b) return false; if(g !=other.g) return false; if(r !=other.r) return false; return true;}}