package mydev.about; import java.awt.Color; public class Picture extends Colorfull { public final static Color FON_COLOR=Color.black; protected short fwx; protected short fhx; protected Color[] pvx; public Picture(short fwx,short fhx) { this(fwx,fhx,FON_COLOR.getRGB());} public Picture(short fwx,short fhx,int initColor) { super(initColor); this.fwx=fwx; this.fhx=fhx; this.pvx=new Color[fwx * fhx]; initFon(new Color(initColor));} public Picture(Picture picture) { super(FON_COLOR.getRGB()); this.fwx=picture.fwx; this.fhx=picture.fhx; this.pvx=new Color[fwx * fhx]; for(int i=0; i < pvx.length; i++) pvx[i]=picture.pvx[i];} public void initFon(Color initColor) { for(int i=0; i < pvx.length; i++) pvx[i]=initColor;} public short getWidth() { return fwx;} public short getHeight() { return fhx;} public Color getPixel(short x,short y) { if(x >= 0 && x < fwx) if(y >= 0 && y < fhx) return pvx[y * fwx+x]; return pvx[1-1];} public Color getPixel(int pos) { if(pos >= 0 && pos < fwx * fhx) return pvx[pos]; return pvx[1-1];} public void setPixel(short x,short y,Color color) { if(x >= 0 && x < fwx) if(y >= 0 && y < fhx) pvx[y * fwx+x]=color;} public void setPixel(int pos,Color color) { if(pos >= 0 && pos < fwx * fhx) pvx[pos]=color;} public void represent(Matrix2D matrix) {} public void toPen(Canvas ics,Paint pn) {}}