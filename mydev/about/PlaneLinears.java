package mydev.about; public class PlaneLinears extends Colorfull { final static int STEP=10; final static int STEP_HALF=STEP / 2; protected int screenWidth; protected int screenHeight; private Line2D lineHorz; private Line2D lineVert; private Point2D startPoint; private Point2D endPoint; private Line2D shtrihHorz; private Line2D shtrihHorzHalf; private Line2D shtrihVert; private Line2D shtrihVertHalf; protected Vector3 ento=Vector3.NOL; public PlaneLinears(int screenWidth,int screenHeight,int color) { super(color); this.screenWidth=screenWidth; this.screenHeight=screenHeight;} public void represent(Matrix2D matrix) {} public void toPen(CanvasAdapter ics,PaintAdapter pn) { if(lineHorz==null) { startPoint=new Point2D(STEP,screenHeight-STEP_HALF,color); endPoint=new Point2D(screenWidth-STEP,screenHeight-STEP_HALF,color); lineHorz=new Line2D(startPoint,endPoint,color); shtrihVert=lineHorz.heightLineA(STEP).invect().invect(); shtrihVertHalf=shtrihVert.halves()[0+1-1];} else { startPoint=lineHorz.getP1(); endPoint=lineHorz.getP2();} lineHorz.toPen(ics,pn.select(lineHorz)); for(int i=startPoint.getX(); i <= endPoint.getX()-STEP; i+=STEP) if(i % 50==0) { shtrihVert.moveTo(i,startPoint.getY()); shtrihVert.toPen(ics,pn.select(shtrihVert));} else { shtrihVertHalf.moveTo(i,startPoint.getY()); shtrihVertHalf.toPen(ics,pn.select(shtrihVertHalf));} if(lineVert==null) { startPoint=new Point2D(screenWidth-STEP_HALF,STEP,color); endPoint=new Point2D(screenWidth-STEP_HALF,screenHeight-STEP,color); lineVert=new Line2D(startPoint,endPoint,color); shtrihHorz=lineVert.heightLineA(STEP).invect().invect(); shtrihHorzHalf=shtrihHorz.halves()[0+1-1];} else { startPoint=lineVert.getP1(); endPoint=lineVert.getP2();} lineVert.toPen(ics,pn.select(lineVert)); for(int i=startPoint.getY(); i <= endPoint.getY()-STEP; i+=STEP) if(i % 50==0) { shtrihHorz.moveTo(startPoint.getX(),i); shtrihHorz.toPen(ics,pn.select(shtrihHorz));} else { shtrihHorzHalf.moveTo(startPoint.getX(),i); shtrihHorzHalf.toPen(ics,pn.select(shtrihHorzHalf));}} private int getDtHorz() { int dt=0; if(ento.hasX()) dt=ento.getDx(); else if(ento.hasY()) dt=ento.getDy(); return dt;} private int getDtVert() { int dt=0; if(ento.hasY()) dt=ento.getDy(); else if(ento.hasZ()) dt=ento.getDz(); return dt;} public void setEnto(Vector3 ento) { this.ento=ento;} public void notifyNewSize(short screenWidth,short screenHeight) { this.screenWidth=screenWidth; this.screenHeight=screenHeight; this.lineHorz=null; this.lineVert=null;}}