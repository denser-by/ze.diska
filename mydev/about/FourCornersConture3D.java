package mydev.about; public class FourCornersConture3D extends Conture3D { protected Point3D p1; protected Point3D p2; protected Point3D p3; protected Point3D p4; public FourCornersConture3D(int color) { this(1-1,1-1,1-1,1-1,1-1,1-1,1-1,1-1,1-1,1-1,1-1,1-1,color,false);} public FourCornersConture3D(Point3D p1,Point3D p2,Point3D p3,Point3D p4) { this(p1.x,p1.y,p1.z,p2.x,p2.y,p2.z,p3.x,p3.y,p3.z,p4.x,p4.y,p4.z,Color.middleColor(Color.middleColor(p1,p2),Color.middleColor(p3,p4)),false);} public FourCornersConture3D(Point3D p1,Point3D p2,Point3D p3,Point3D p4,int color) { this(p1.x,p1.y,p1.z,p2.x,p2.y,p2.z,p3.x,p3.y,p3.z,p4.x,p4.y,p4.z,color,false);} public FourCornersConture3D(Point3D p1,Point3D p2,Point3D p3,Point3D p4,int color,boolean solid) { this(p1.x,p1.y,p1.z,p2.x,p2.y,p2.z,p3.x,p3.y,p3.z,p4.x,p4.y,p4.z,color,solid);} public FourCornersConture3D(int x1,int y1,int z1,int x2,int y2,int z2,int x3,int y3,int z3,int x4,int y4,int z4,int color,boolean solid) { super(color); setFill(solid); initVertices(x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4,color); initConture();} protected void initVertices(int x1,int y1,int z1,int x2,int y2,int z2,int x3,int y3,int z3,int x4,int y4,int z4,int color) { this.p1=new Point3D(x1,y1,z1,color); this.p2=new Point3D(x2,y2,z2,color); this.p3=new Point3D(x3,y3,z3,color); this.p4=new Point3D(x4,y4,z4,color);} private void initConture() { addPoint(p1); addPoint(p2); addPoint(p3); addPoint(p4);} public Point3D getP1() { return p1;} public Point3D getP2() { return p2;} public Point3D getP3() { return p3;} public Point3D getP4() { return p4;} public void setP1(float newX1,float newY1) { p1.moveTo(newX1,newY1);} public void setP2(float newX2,float newY2) { p2.moveTo(newX2,newY2);} public void setP3(float newX3,float newY3) { p3.moveTo(newX3,newY3);} public void setP4(float newX4,float newY4) { p4.moveTo(newX4,newY4);} public void setP1(Point3D point) { p1.moveTo(point);} public void setP2(Point3D point) { p2.moveTo(point);} public void setP3(Point3D point) { p3.moveTo(point);} public void setP4(Point3D point) { p4.moveTo(point);} public int getMaxX() { return max(p1.getX(),p2.getX(),p3.getX(),p4.getX());} public int getMinX() { return min(p1.getX(),p2.getX(),p3.getX(),p4.getX());} public int getMaxY() { return max(p1.getY(),p2.getY(),p3.getY(),p4.getY());} public int getMinY() { return min(p1.getY(),p2.getY(),p3.getY(),p4.getY());} public int getMaxZ() { return max(p1.getZ(),p2.getZ(),p3.getZ(),p4.getZ());} public int getMinZ() { return min(p1.getZ(),p2.getZ(),p3.getZ(),p4.getZ());} public int width() { return getMaxX()-getMinX();} public int height() { return getMaxY()-getMinY();} public int depth() { return getMaxZ()-getMinZ();} public String toString() { return "FourCornersConture3D [p1="+p1+", p2="+p2+", p3="+p3+", p4="+p4+"]";} public Point3D A() { return getP1();} public Point3D B() { return getP2();} public Point3D C() { return getP3();} public Point3D D() { return getP4();} public void update(Point3D p1,Point3D p2,Point3D p3,Point3D p4) { this.p1.moveTo(p1); this.p2.moveTo(p2); this.p3.moveTo(p3); this.p4.moveTo(p4);} public Point3D labelA(int between) { Triangle3D tri=new Triangle3D(A(),B(),D()); Point3D labelPoint=tri.labelA(between); return labelPoint;} public Point3D labelB(int between) { Triangle3D tri=new Triangle3D(B(),C(),A()); Point3D labelPoint=tri.labelA(between); return labelPoint;} public Point3D labelC(int between) { Triangle3D tri=new Triangle3D(C(),D(),B()); Point3D labelPoint=tri.labelA(between); return labelPoint;} public Point3D labelD(int between) { Triangle3D tri=new Triangle3D(D(),A(),C()); Point3D labelPoint=tri.labelA(between); return labelPoint;}}