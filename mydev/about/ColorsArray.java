package mydev.about; import java.awt.Color; public class ColorsArray { public static final Point2D whitePoint=obtainColorPoint(Color.white); public static final Point2D lightGrayPoint=obtainColorPoint(Color.lightGray); public static final Point2D grayPoint=obtainColorPoint(Color.gray); public static final Point2D darkGrayPoint=obtainColorPoint(Color.darkGray); public static final Point2D blackPoint=obtainColorPoint(Color.black); public static final Point2D redPoint=obtainColorPoint(Color.red); public static final Point2D pinkPoint=obtainColorPoint(Color.pink); public static final Point2D orangePoint=obtainColorPoint(Color.orange); public static final Point2D yellowPoint=obtainColorPoint(Color.yellow); public static final Point2D greenPoint=obtainColorPoint(Color.green); public static final Point2D magentaPoint=obtainColorPoint(Color.magenta); public static final Point2D cyanPoint=obtainColorPoint(Color.cyan); public static final Point2D bluePoint=obtainColorPoint(Color.blue); public static final Color objRibs=new Color(248,186,111); public static final Point2D winPoint=obtainColorPoint(objRibs); final static int blackColorInt=blackPoint.ic(); protected int[] colors; public ColorsArray() { super(); this.colors=getDefColors();} public void setColors(int[] newColors) { if(newColors !=null && newColors.length > 0) this.colors=newColors;} public int getColor(int colorIdx) { int first=colorIdx / colors.length; int idx=colorIdx-first * colors.length; if(first > 0 && first < colors.length) { int c1=colors[first]; int c2=colors[idx]; if(c1==c2) c2=Color.white.getRGB(); return new mydev.about.Color(c1).middle(new mydev.about.Color(c2)).rgb();} return colors[idx];} public int[] getDefColors() { int[] cArr=new int[5+5]; for(int i=0; i < cArr.length; i++) switch(i) { case 0 : cArr[i]=orangePoint.ic(); break; case 1 : cArr[i]=pinkPoint.ic(); break; case 2 : cArr[i]=lightGrayPoint.ic(); break; case 3 : cArr[i]=cyanPoint.ic(); break; case 4 : cArr[i]=winPoint.ic(); break; case 5 : cArr[i]=greenPoint.ic(); break; case 6 : cArr[i]=grayPoint.ic(); break; case 7 : cArr[i]=bluePoint.ic(); break; case 8 : cArr[i]=darkGrayPoint.ic(); break; case 9 : cArr[i]=yellowPoint.ic(); break; default : cArr[i]=blackPoint.ic();} return cArr;} public static Point2D obtainColorPoint(Color c) { return new Point2D(0,0,c.getRGB());} public static Point2D obtainColorPoint(int ci) { return new Point2D(0,0,ci);} public static Color middleColor(Colorfull c1,Colorfull c2) { return new Color(mydev.about.Color.middleColor(c1,c2));}}