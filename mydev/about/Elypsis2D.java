package mydev.about; public class Elypsis2D extends Rectangle2D { protected int angleStart; protected int angleDt; public Elypsis2D(Point2D uc,int width,int height,int angleStart,int angleDt) { this(uc,width,height,uc.color,angleStart,angleDt,false);} public Elypsis2D(Point2D uc,int width,int height,int color,int angleStart,int angleDt) { this(uc,width,height,color,angleStart,angleDt,false);} public Elypsis2D(Point2D uc,int width,int height,int color,int angleStart,int angleDt,boolean solid) { super(uc,width,height,color,solid); this.angleStart=angleStart; this.angleDt=angleDt;} public Elypsis2D(Point2D uc,int width,int height,int color,float angleStart,float angleDt,boolean fill) { this(uc,width,height,color,(int)(angleStart+0.5f),(int)(angleDt+0.5f),fill);} public Elypsis2D(Point2D uc,int width,int height,int color,double angleStart,double angleDt,boolean fill) { this(uc,width,height,color,(float) angleStart,(float) angleDt,fill);} public Elypsis2D(Point2D uc,float width,float height,int angleStart,int angleDt) { this(uc,(int)(width+0.5f),(int)(height+0.5f),uc.color,angleStart,angleDt);} public Elypsis2D(Point2D uc,float width,float height,float angleStart,float angleDt) { this(uc,(int)(width+0.5f),(int)(height+0.5f),uc.color,(int)(angleStart+0.5f),(int)(angleDt+0.5f));} public Elypsis2D(Point2D uc,float width,float height,int color,int angleStart,int angleDt) { this(uc,(int)(width+0.5f),(int)(height+0.5f),color,angleStart,angleDt);} public Elypsis2D(Point2D uc,float width,float height,int color,float angleStart,float angleDt) { this(uc,(int)(width+0.5f),(int)(height+0.5f),color,(int)(angleStart+0.5f),(int)(angleDt+0.5f));} public Elypsis2D(Point2D uc,float width,float height,int color,int angleStart,int angleDt,boolean solid) { this(uc,(int)(width+0.5f),(int)(height+0.5f),color,angleStart,angleDt,solid);} public Elypsis2D(Point2D uc,float width,float height,int color,float angleStart,float angleDt,boolean solid) { this(uc,(int)(width+0.5f),(int)(height+0.5f),color,(int)(angleStart+0.5f),(int)(angleDt+0.5f),solid);} public Elypsis2D(Point2D uc,double width,double height,int angleStart,int angleDt) { this(uc,(float) width,(float) height,uc.color,angleStart,angleDt);} public Elypsis2D(Point2D uc,double width,double height,int color,int angleStart,int angleDt) { this(uc,(float) width,(float) height,color,angleStart,angleDt);} public Elypsis2D(Point2D uc,double width,double height,int color,int angleStart,int angleDt,boolean solid) { this(uc,(float) width,(float) height,color,angleStart,angleDt,solid);} public Elypsis2D(Point2D uc,short width,short height,int angleStart,int angleDt) { this(uc,(int) width,(int) height,uc.color,angleStart,angleDt);} public Elypsis2D(Point2D uc,short width,short height,int color,int angleStart,int angleDt) { this(uc,(int) width,(int) height,color,angleStart,angleDt);} public Elypsis2D(Point2D uc,short width,short height,int color,int angleStart,int angleDt,boolean solid) { this(uc,(int) width,(int) height,color,angleStart,angleDt,solid);} public Elypsis2D(Elypsis2D s,int angleStart,int angleDt) { this(s.uc,s.width,s.height,s.color,angleStart,angleDt,s.full);} public Elypsis2D(Elypsis2D s,float angleStart,float angleDt) { this(s.uc,s.width,s.height,s.color,angleStart,angleDt,s.full);} public Elypsis2D(Elypsis2D s,double angleStart,double angleDt) { this(s.uc,s.width,s.height,s.color,angleStart,angleDt,s.full);} public void represent(Matrix2D matrix) { matrix.addElypsis(this);} public void toPenSolid(Canvas ics,Paint pn) { ics.fillElypsis(uc.getX(),uc.getY(),width,height,angleStart,angleDt,pn);} public void toPenConture(Canvas ics,Paint pn) { ics.drawElypsis(uc.getX(),uc.getY(),width,height,angleStart,angleDt,pn);} public int getAngleStart() { return angleStart;} public int getAngleDt() { return angleDt;} public void setAngleStart(int angleStart) { this.angleStart=angleStart;} public void setAngleDt(int angleDt) { this.angleDt=angleDt;}}