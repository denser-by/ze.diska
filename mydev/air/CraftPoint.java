package mydev.air; import mydev.about.Canvas; import mydev.about.Colorfull; import mydev.about.Paint; import mydev.about.Point2D; import mydev.about.Point3D; import mydev.about.Vector3; public class CraftPoint extends Point3D implements CraftShape { private CraftVertEx cubeA; private CustomPoint2D projection; private static FillingType fillingType=FillingType.FT_SOLID; public CraftPoint(CraftVertEx aItem,int pointColor) { super(aItem.getCenter(),pointColor); this.cubeA=aItem;} public ProjPointXY pointProjXY(Vector3 xyShift) { update3D(); ProjPointXY lineProj=new ProjPointXY(this,cubeA.getName(),CraftProps.lineColorVirtualProjection,CraftProps.textColorVirtualCoords,xyShift); return lineProj;} public ProjPointYZ pointProjYZ(Vector3 yzShift) { update3D(); ProjPointYZ lineProj=new ProjPointYZ(this,cubeA.getName(),CraftProps.lineColorVirtualProjection,CraftProps.textColorVirtualCoords,yzShift); return lineProj;} public ProjPointXZ pointProjXZ(Vector3 xzShift) { update3D(); ProjPointXZ lineProj=new ProjPointXZ(this,cubeA.getName(),CraftProps.lineColorVirtualProjection,CraftProps.textColorVirtualCoords,xzShift); return lineProj;} public void updatePointProjXY(Point2D point,Vector3 relocVect,Point2D p1234) { updatePointCommon(point,relocVect,p1234);} public void updatePointProjYZ(Point2D point,Vector3 relocVect2,Point2D p1234) { Vector3 relocVect=Vector3.shiftYZ(relocVect2.getDx(),relocVect2.getDy()); updatePointCommon(point,relocVect,p1234);} public void updatePointProjXZ(Point2D point,Vector3 relocVect2,Point2D p1234) { Vector3 relocVect=Vector3.shiftXZ(relocVect2.getDx(),relocVect2.getDy()); updatePointCommon(point,relocVect,p1234);} private void updatePointCommon(Point2D point,Vector3 relocVect,Point2D p1234) { Point3D A=cubeA.getCenter(); if(p1234.equals(point)) A.shift(relocVect); update(A);} private void update3D() { update(cubeA.getCenter());} private void update() { Point2D aVert=cubeA.getFrontBackViewCenter(); projection=new CustomPoint2D(aVert,CraftProps.lineColorVirtualSpace.getRGB());} public void toPen(Canvas ics,Paint pn) { update(); toPenProj3D(ics,pn);} public void toPenProj3D(Canvas ics,Paint pn) { projection.toPen(ics,pn.select(projection));} public Colorfull setFillingType(FillingType fillingType) { CraftPoint.fillingType=FillingType.FT_SOLID; return this;} public FillingType getFillingType() { return fillingType;} public String toString() { return "CraftPoint [cubeA="+cubeA+", projection="+projection+"]";}}