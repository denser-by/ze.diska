package mydev.air; import java.awt.Color; import mydev.about.CanvasAdapter; import mydev.about.Colorfull; import mydev.about.PaintAdapter; import mydev.about.Point2D; import mydev.about.Point3D; import mydev.about.Vector3; import mydev.csprofile.OpenFrontCubeProfile; public class CraftCube extends CraftVertEx implements CraftShape { public static final int SIDE=73; private CraftVertEx cubeA; private static FillingType fillingType=FillingType.FT_LINES; public CraftCube(CraftVertEx aItem,int pointColor) { super(aItem.getName(),aItem.getCenter(),pointColor,new Color(pointColor),SIDE); this.cubeA=aItem; this.planesRepo=new OpenFrontCubeProfile(pointColor);} public void toPenProj3D(CanvasAdapter ics,PaintAdapter pn) {} public ProjCubeXY cubeProjXY(Vector3 xyShift) { update3D(); ProjCubeXY lineProj=new ProjCubeXY(this.getCenter(),cubeA.getName(),SIDE,CraftProps.lineColorVirtualProjection,CraftProps.textColorVirtualCoords,xyShift); return lineProj;} public ProjCubeYZ cubeProjYZ(Vector3 yzShift) { update3D(); ProjCubeYZ lineProj=new ProjCubeYZ(this.getCenter(),cubeA.getName(),SIDE,CraftProps.lineColorVirtualProjection,CraftProps.textColorVirtualCoords,yzShift); return lineProj;} public ProjCubeXZ cubeProjXZ(Vector3 xzShift) { update3D(); ProjCubeXZ lineProj=new ProjCubeXZ(this.getCenter(),cubeA.getName(),SIDE,CraftProps.lineColorVirtualProjection,CraftProps.textColorVirtualCoords,xzShift); return lineProj;} public void updateCubeProjXY(Point2D point,Vector3 relocVect,Point2D p1234) { updateCubeCommon(point,relocVect,p1234);} public void updateCubeProjYZ(Point2D point,Vector3 relocVect2,Point2D p1234) { Vector3 relocVect=Vector3.shiftYZ(relocVect2.getDx(),relocVect2.getDy()); updateCubeCommon(point,relocVect,p1234);} public void updateCubeProjXZ(Point2D point,Vector3 relocVect2,Point2D p1234) { Vector3 relocVect=Vector3.shiftXZ(relocVect2.getDx(),relocVect2.getDy()); updateCubeCommon(point,relocVect,p1234);} private void updateCubeCommon(Point2D point,Vector3 relocVect,Point2D p1234) { Point3D A=cubeA.getCenter(); if(p1234.equals(point)) A.shift(relocVect); update(A);} private void update3D() { update(cubeA.getCenter());} public Colorfull setFillingType(FillingType fillingType) { CraftCube.fillingType=fillingType; return this;} public FillingType getFillingType() { return fillingType;} public String toString() { return "CraftCube [cubeA="+cubeA+"]";}}