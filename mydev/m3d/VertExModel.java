package mydev.m3d; import java.util.Enumeration; import java.util.Hashtable; import mydev.about.Colorfull; import mydev.about.ColorsArray; import mydev.vutils.Queue; public class VertExModel { public static final int CELL=18+1; public static final int USUAL=ColorsArray.bluePoint.ic(); public static final int ACTIVATION=ColorsArray.yellowPoint.ic(); public static final int PRECICE=ColorsArray.whitePoint.ic(); protected Queue vertices=new Queue(); protected int halfSide=CELL; protected int objColor=USUAL; protected int objActivationColor=ACTIVATION; protected int projectionsColor=PRECICE; public VertExModel() { super();} public VertExModel(int halfSide,int objColor,int objActivationColor,int projectionsColor) { super(); this.halfSide=halfSide; this.objColor=objColor; this.objActivationColor=objActivationColor; this.projectionsColor=projectionsColor;} public void setActivationListener(ActivationListener listener) { Object[] queueRecordsArray=vertices.getQueueRecordsArray(); for(int i=0; i < queueRecordsArray.length; i++) { VertEx3D vert=(VertEx3D) queueRecordsArray[i]; vert.setListener(listener);}} public ActivationListener getActivationListener() { if(vertices !=null && vertices.sizeOfQueue() > 0) return((VertEx3D) vertices.getQueueRecord(0)).getListener(); return null;} public void addVert(VertEx3D vert) { if(vert !=null) vertices.enqueueQueueRecord(vert);} public void addVerts(VertEx3D[] verts) { if(verts !=null) vertices.enqueueQueueRecords(verts);} public int getNum() { return(int) vertices.sizeOfQueue();} public VertEx3D getVert(String name) { Object[] queueRecordsArray=vertices.getQueueRecordsArray(); for(int i=0; i < queueRecordsArray.length; i++) { VertEx3D vert=(VertEx3D) queueRecordsArray[i]; if(vert.getName().compareToIgnoreCase(name)==0) return vert;} return null;} public VertEx3D[] getAll() { Object[] queueRecordsArray=vertices.getQueueRecordsArray(); VertEx3D[] result=new VertEx3D[queueRecordsArray.length]; for(int i=0; i < queueRecordsArray.length; i++) result[i]=(VertEx3D) queueRecordsArray[i]; return result;}}