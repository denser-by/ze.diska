package mydev.csprofile; import mydev.about.Canvas; import mydev.about.ColorsArray; import mydev.about.Matrix2D; import mydev.about.Paint; import mydev.cs.Bounds; import mydev.cs.ConturePlane; import mydev.cs.PlanesProfile; public class OpenFrontCubeProfile extends PlanesProfile { public OpenFrontCubeProfile(int contureColor) { super(contureColor);} public void represent(Matrix2D matrix) {} public void toPen(Canvas ics,Paint pn) {} protected ConturePlane obtainPlaneBack(int contureColor) { return new CubePlaneWrap(contureColor,new OpenFrontCubePlaneBack(contureColor,ColorsArray.orangePoint.ic()));} protected ConturePlane obtainPlaneTop(int contureColor) { return new CubePlaneWrap(contureColor,new OpenFrontCubePlaneTop(contureColor,ColorsArray.lightGrayPoint.ic()));} protected ConturePlane obtainPlaneRight(int contureColor) { return new CubePlaneWrap(contureColor,new OpenFrontCubePlaneRight(contureColor,ColorsArray.blackPoint.ic()));} protected ConturePlane obtainPlaneBottom(int contureColor) { return new CubePlaneWrap(contureColor,new OpenFrontCubePlaneBottom(contureColor,ColorsArray.lightGrayPoint.ic()));} protected ConturePlane obtainPlaneLeft(int contureColor) { return new CubePlaneWrap(contureColor,new OpenFrontCubePlaneLeft(contureColor,ColorsArray.blackPoint.ic()));} protected ConturePlane obtainPlaneFront(int contureColor) { return new CubePlaneWrap(contureColor,new OpenFrontCubePlaneFront(contureColor));}} class OpenFrontCubePlaneBack extends CubeSolidColorPlane { public OpenFrontCubePlaneBack(int borderColor,int fillColor) { super(borderColor,fillColor);} public void update(Bounds front,Bounds back) { p1.moveTo(back.getLeftX(),back.getTopY()); p2.moveTo(back.getRightX(),back.getTopY()); p3.moveTo(back.getRightX(),back.getBottomY()); p4.moveTo(back.getLeftX(),back.getBottomY());} public String toString() { return "CubePlaneBack []";}} class OpenFrontCubePlaneFront extends CubeConturePlane { public OpenFrontCubePlaneFront(int color) { super(color);} public void update(Bounds front,Bounds back) { p1.moveTo(front.getLeftX(),front.getTopY()); p2.moveTo(front.getRightX(),front.getTopY()); p3.moveTo(front.getRightX(),front.getBottomY()); p4.moveTo(front.getLeftX(),front.getBottomY());} public String toString() { return "CubePlaneFront []";}} class OpenFrontCubePlaneLeft extends CubeSolidColorPlane { public OpenFrontCubePlaneLeft(int borderColor,int fillColor) { super(borderColor,fillColor);} public void update(Bounds front,Bounds back) { p1.moveTo(front.getLeftX(),front.getTopY()); p2.moveTo(back.getLeftX(),back.getTopY()); p3.moveTo(back.getLeftX(),back.getBottomY()); p4.moveTo(front.getLeftX(),front.getBottomY());} public String toString() { return "CubePlaneLeft []";}} class OpenFrontCubePlaneRight extends CubeSolidColorPlane { public OpenFrontCubePlaneRight(int borderColor,int fillColor) { super(borderColor,fillColor);} public void update(Bounds front,Bounds back) { p1.moveTo(front.getRightX(),front.getTopY()); p2.moveTo(back.getRightX(),back.getTopY()); p3.moveTo(back.getRightX(),back.getBottomY()); p4.moveTo(front.getRightX(),front.getBottomY());} public String toString() { return "CubePlaneRight []";}} class OpenFrontCubePlaneTop extends CubeSolidColorPlane { public OpenFrontCubePlaneTop(int borderColor,int fillColor) { super(borderColor,fillColor);} public void update(Bounds front,Bounds back) { p1.moveTo(front.getLeftX(),front.getTopY()); p2.moveTo(back.getLeftX(),back.getTopY()); p3.moveTo(back.getRightX(),back.getTopY()); p4.moveTo(front.getRightX(),front.getTopY());} public String toString() { return "CubePlaneTop []";}} class OpenFrontCubePlaneBottom extends CubeSolidColorPlane { public OpenFrontCubePlaneBottom(int borderColor,int fillColor) { super(borderColor,fillColor);} public void update(Bounds front,Bounds back) { p1.moveTo(front.getLeftX(),front.getBottomY()); p2.moveTo(back.getLeftX(),back.getBottomY()); p3.moveTo(back.getRightX(),back.getBottomY()); p4.moveTo(front.getRightX(),front.getBottomY());} public String toString() { return "CubePlaneBottom []";}}