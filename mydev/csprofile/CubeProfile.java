package mydev.csprofile; import mydev.about.Canvas; import mydev.about.ColorsArray; import mydev.about.Matrix2D; import mydev.about.Paint; import mydev.about.Point2D; import mydev.cs.Bounds; import mydev.cs.ConturePlane; import mydev.cs.LinesPlane; import mydev.cs.PlanesProfile; import mydev.cs.SolidColorPlane; public class CubeProfile extends PlanesProfile { public CubeProfile(int contureColor) { super(contureColor);} public void represent(Matrix2D matrix) {} public void toPen(Canvas ics,Paint pn) {} protected ConturePlane obtainPlaneBack(int contureColor) { return new CubePlaneWrap(contureColor,new CubePlaneBack(contureColor));} protected ConturePlane obtainPlaneTop(int contureColor) { return new CubePlaneWrap(contureColor,new CubePlaneTop(contureColor,ColorsArray.winPoint.ic(),true,11));} protected ConturePlane obtainPlaneRight(int contureColor) { return new CubePlaneWrap(contureColor,new CubePlaneRight(contureColor));} protected ConturePlane obtainPlaneBottom(int contureColor) { return new CubePlaneWrap(contureColor,new CubePlaneBottom(contureColor,ColorsArray.lightGrayPoint.ic()));} protected ConturePlane obtainPlaneLeft(int contureColor) { return new CubePlaneWrap(contureColor,new CubePlaneLeft(contureColor));} protected ConturePlane obtainPlaneFront(int contureColor) { return new CubePlaneWrap(contureColor,new CubePlaneFront(contureColor));}} class CubePlaneWrap extends ConturePlane { protected ConturePlane customPlane; public CubePlaneWrap(int contureColor,ConturePlane customPlane) { super(contureColor); this.customPlane=customPlane;} public void represent(Matrix2D matrix) { customPlane.represent(matrix);} public void toPen(Canvas ics,Paint pn) { customPlane.toPen(ics,pn);} public void particularDrawing(Canvas ics,Paint pn) { customPlane.particularDrawing(ics,pn);} public void update(Bounds front,Bounds back) { customPlane.update(front,back);} public Point2D midpoint() { return customPlane.midpoint();} public String toString() { return "CubePlaneWrap [customPlane="+customPlane+"]";}} class CubePlaneBack extends ConturePlane { public CubePlaneBack(int color) { super(color);} public void particularDrawing(mydev.about.Canvas ics,Paint pn) {} public void update(Bounds front,Bounds back) { p1.moveTo(back.getLeftX(),back.getTopY()); p2.moveTo(back.getRightX(),back.getTopY()); p3.moveTo(back.getRightX(),back.getBottomY()); p4.moveTo(back.getLeftX(),back.getBottomY());} public String toString() { return "CubePlaneBack []";}} class CubePlaneFront extends ConturePlane { public CubePlaneFront(int color) { super(color);} public void particularDrawing(mydev.about.Canvas ics,Paint pn) {} public void update(Bounds front,Bounds back) { p1.moveTo(front.getLeftX(),front.getTopY()); p2.moveTo(front.getRightX(),front.getTopY()); p3.moveTo(front.getRightX(),front.getBottomY()); p4.moveTo(front.getLeftX(),front.getBottomY());} public String toString() { return "CubePlaneFront []";}} class CubePlaneLeft extends ConturePlane { public CubePlaneLeft(int borderColor) { super(borderColor);} public void particularDrawing(mydev.about.Canvas ics,Paint pn) {} public void update(Bounds front,Bounds back) { p1.moveTo(front.getLeftX(),front.getTopY()); p2.moveTo(back.getLeftX(),back.getTopY()); p3.moveTo(back.getLeftX(),back.getBottomY()); p4.moveTo(front.getLeftX(),front.getBottomY());} public String toString() { return "CubePlaneLeft []";}} class CubePlaneRight extends ConturePlane { public CubePlaneRight(int borderColor) { super(borderColor);} public void particularDrawing(mydev.about.Canvas ics,Paint pn) {} public void update(Bounds front,Bounds back) { p1.moveTo(front.getRightX(),front.getTopY()); p2.moveTo(back.getRightX(),back.getTopY()); p3.moveTo(back.getRightX(),back.getBottomY()); p4.moveTo(front.getRightX(),front.getBottomY());} public String toString() { return "CubePlaneRight []";}} class CubePlaneTop extends LinesPlane { public CubePlaneTop(int borderColor,int linesColor,boolean vertLines,int stepPercentBetweenLines) { super(borderColor,linesColor,vertLines,stepPercentBetweenLines);} public void update(Bounds front,Bounds back) { p1.moveTo(front.getLeftX(),front.getTopY()); p2.moveTo(back.getLeftX(),back.getTopY()); p3.moveTo(back.getRightX(),back.getTopY()); p4.moveTo(front.getRightX(),front.getTopY());} public String toString() { return "CubePlaneTop []";}} class CubePlaneBottom extends SolidColorPlane { public CubePlaneBottom(int borderColor,int fillColor) { super(borderColor,fillColor);} public void particularDrawing(mydev.about.Canvas ics,Paint pn) {} public void update(Bounds front,Bounds back) { p1.moveTo(front.getLeftX(),front.getBottomY()); p2.moveTo(back.getLeftX(),back.getBottomY()); p3.moveTo(back.getRightX(),back.getBottomY()); p4.moveTo(front.getRightX(),front.getBottomY());} public String toString() { return "CubePlaneBottom []";}}