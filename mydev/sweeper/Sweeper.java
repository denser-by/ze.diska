package mydev.sweeper; import java.io.File; import java.io.FileInputStream; import java.io.FileOutputStream; import java.io.IOException; import mydev.vutils.Spiska; import mydev.vutils.Files; import mydev.vutils.Filter; import mydev.vutils.Ask; import mydev.vutils.Time; import mydev.vutils.Ester; public class Sweeper { final String[] STOP={ ".c",".cpp",".h",".java",".bat","zetupka",".jpg",".png",".gif",".mp4",".avi",".wma",".ogg",".tree"}; Files files; Filter filter; public Sweeper() { this.files=new Files(); this.filter=new Filter();} public boolean checkExt(Ester ext) { boolean wrong=false; for(int i=0; !wrong && i < STOP.length; i++) if(ext.lc().ends(new Ester(STOP[i].toLowerCase()))) wrong=!wrong; return wrong;} public static void main(String[] args) { Files files=new Files(); if(args.length > 0) { Ester root=files.dir(); Ester what=new Ester(args[0]); Sweeper ps=new Sweeper(); ps.proceed(root,what);} else System.out.println("Extension is required as a parameter.");} public void proceed(Ester root,Ester what) { Time time=new Time(); System.out.println("Sweep...where="+root+"...what=*"+what); if(!checkExt(what)) { time.start(); Ester[] vse=files.tree(root); Ester[] chosen=filter.endsWithIncensitive(vse,what.lc()); System.out.println("  vsego="+vse.length+"  chosen="+chosen.length); dosvidos(chosen,what); time.trust(); System.out.println("   Zatrachana : "+time.ess());} else System.out.println("This extension is not permitted for deletion.");} public void dosvidos(Ester[] www,Ester ext) { Ask a=new Ask("Do you want to delete {"+ext+"}"+www.length+" shtuk"); if(a.areYouSure()) { int er=0,er2=0; int ok=0,ok2=0; for(int i=0; i < www.length; i++) { try { overread(www[i]); ok++;} catch(IOException ex) { er++;} try { new File(www[i].toString()).delete(); ok2++;} catch(Exception ex) { er2++;}} if(er+er2 > 0) System.out.println("Oshi.bocheck udaleniya wozniklo {"+er+","+er2+"}"); if(ok+ok2 > 0) System.out.println("Uspeh.no proshlo {"+ok+","+ok2+"}");}} void overread(Ester fPath) throws IOException { File fOpen=new File(fPath.toString()); FileInputStream fos=new FileInputStream(fOpen); byte[] data=new byte[128 * 4096]; int count=fos.read(data); fos.close(); boolean f=false; for(int i=0; i < count / 3; i++) { data[i]=f ?(byte) 10 :(byte) 13; f=!f;} File wOpen=new File(fPath.toString()); FileOutputStream os=new FileOutputStream(wOpen); os.write(data); os.flush(); os.close();} public byte[] read(String fPath) throws IOException { File fOpen=new File(fPath); FileInputStream fos=new FileInputStream(fOpen); Spiska ht=new Spiska(); int vPower=0; int count; byte[] buf=new byte[4096]; do { count=fos.read(buf); if(count > 0) vPower+=count; if(count < 1) continue; if(count <= 4096) { byte[] zzz=new byte[count]; System.arraycopy(buf,0,zzz,0,count); ht.append((Object) zzz);}} while(count > 0); fos.close(); byte[] total=new byte[vPower]; int totalIdx=0; for(int i=0; i < ht.size(); i++) { byte[] cur=(byte[]) ht.at(i); int curLen=cur.length; System.arraycopy(cur,0,total,totalIdx,curLen); totalIdx+=curLen;} return total;} public void write(String fPath,byte[] bCont) throws IOException { File wOpen=new File(fPath); FileOutputStream os=new FileOutputStream(wOpen); os.write(bCont); os.flush(); os.close();}}
