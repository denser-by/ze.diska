package mydev.perceptron; public class NodeInput extends ResultlessNeuronicNode { protected InputProvider inputProvider; protected float mult; protected float originalMult; public NodeInput(InputProvider inputProvider,float mult) { super(); this.inputProvider=inputProvider; this.originalMult=mult; initClearState();} public NodeInput(InputProvider inputProvider) { this(inputProvider,NeuronicWrap.ONE_PARTIocULAR);} public float processSignal() { if(inputProvider !=null) { double inputSignalValue=inputProvider.getValue(); inputSignalValue *= mult; return(float) inputSignalValue;} return NO_SIGNAL_SENIOR;} public void initClearState() { mult=originalMult;}}