package mydev.im12x; import java.awt.Color; public class ParserAdapter { protected int s; protected int r1; protected int r2; protected int r3; protected int r4; protected int n=0; protected int idx=0; protected int[] pix; public ParserAdapter(int[] pix) { this.pix=pix;} public void push(byte[] buf,int count,int[] palette) { for(int j=0; j < count; j++) { push(buf[j]); if(n==0) { System.out.println(" "+idx+" "+pix[idx-1]);}}} public void push(int b) { switch(n) { case 0 : r1=b; break; case 1 : r2=b; break; case 2 : r3=b; break; default : r4=b; break;} n++; if(n==4) { n=0; if(r1 < 0) r1+=256; if(r2 < 0) r2+=256; if(r3 < 0) r3+=256; if(r4 < 0) r4+=256; if(r4==0) { pix[idx++]=new Color(r1,r2,r3).getRGB();} else { s=new Color(r1,r2,r3).getRGB(); for(int i=0; i <= r4; i++) pix[idx++]=s;}}} public void push(byte[] buf,int count) { for(int j=0; j < count; j++) push(buf[j]);}} class ParserWithPaletteAdapter extends ParserAdapter { private int[] paletArr; public ParserWithPaletteAdapter(int[] pix,int[] paletArr) { super(pix); this.paletArr=paletArr;} public void push(int b) { switch(n) { case 0 : r1=b; break; case 1 : r2=b; break; case 2 : r3=b; break; default : r4=b; break;} n++; if(n==4) { n=0; if(r1 < 0) r1+=256; if(r2 < 0) r2+=256; if(r3 < 0) r3+=256; if(r4 < 0) r4+=256; if(r4==0) { s=(r3 * 255+r2) * 255+r1; pix[idx++]=paletArr[s];} else { s=(r3 * 255+r2) * 255+r1; for(int i=0; i <= r4; i++) pix[idx++]=paletArr[s];}}}}