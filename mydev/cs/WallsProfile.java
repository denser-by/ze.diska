package mydev.cs; import mydev.about.Colorfull; import mydev.about.Rectangle2D; import mydev.vutils.Queue; public abstract class WallsProfile extends Colorfull { private Queue wallsQueue=new Queue(); protected ContureWall farSide; protected ContureWall ceiling; protected ContureWall rightSide; protected ContureWall floor; protected ContureWall leftSide; protected ContureWall nearGlass; public WallsProfile(int contureColor) { super(contureColor); initWallsQueue(contureColor);} protected void initWallsQueue(int contureColor) { wallsQueue.enqueueQueueRecord(farSide=obtainFarSide(contureColor)); wallsQueue.enqueueQueueRecord(ceiling=obtainCeiling(contureColor)); wallsQueue.enqueueQueueRecord(rightSide=obtainRightSide(contureColor)); wallsQueue.enqueueQueueRecord(floor=obtainFloor(contureColor)); wallsQueue.enqueueQueueRecord(leftSide=obtainLeftSide(contureColor)); wallsQueue.enqueueQueueRecord(nearGlass=obtainNearGlass(contureColor));} protected abstract ContureWall obtainFarSide(int contureColor); protected abstract ContureWall obtainCeiling(int contureColor); protected abstract ContureWall obtainRightSide(int contureColor); protected abstract ContureWall obtainFloor(int contureColor); protected abstract ContureWall obtainLeftSide(int contureColor); protected abstract ContureWall obtainNearGlass(int contureColor); public ContureWall getFarSide() { return farSide;} public ContureWall getCeiling() { return ceiling;} public ContureWall getRightSide() { return rightSide;} public ContureWall getFloor() { return floor;} public ContureWall getLeftSide() { return leftSide;} public ContureWall getNearGlass() { return nearGlass;} public ContureWall[] getWalls() { Object[] queueRecordsArray=wallsQueue.getQueueRecordsArray(); ContureWall[] result=new ContureWall[queueRecordsArray.length]; for(int i=0; i < result.length; i++) result[i]=(ContureWall) queueRecordsArray[i]; return result;} public void updateWalls(Rectangle2D area) { ContureWall[] itWalls=getWalls(); for(int i=0; i < itWalls.length; i++) { ContureWall curWall=(ContureWall) itWalls[i]; curWall.update(area);}}}