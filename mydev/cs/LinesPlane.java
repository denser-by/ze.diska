package mydev.cs; import mydev.about.CanvasAdapter; import mydev.about.Matrix2D; import mydev.about.PaintAdapter; import mydev.about.ScanLineDrawer; public abstract class LinesPlane extends ConturePlane { protected int linesColor; protected boolean vertLines; protected int stepPercentBetweenLines; public LinesPlane(int borderColor,int linesColor,boolean vertLines,int stepPercentBetweenLines,PlaneType planeType) { super(borderColor,planeType); this.linesColor=linesColor; this.vertLines=vertLines; this.stepPercentBetweenLines=stepPercentBetweenLines;} public LinesPlane(int borderColor,int linesColor,boolean vertLines,PlaneType planeType) { super(borderColor,planeType); this.linesColor=linesColor; this.vertLines=vertLines; this.stepPercentBetweenLines=ScanLineDrawer.DEF_STEP_PERCENT;} public void particularDrawing(CanvasAdapter ics,PaintAdapter pn) { ScanLineDrawer li=particular(); li.toPen(ics,pn.select(li));} public void particularDrawing(Matrix2D matrix) { ScanLineDrawer li=particular(); li.represent(matrix);} protected ScanLineDrawer particular() { ScanLineDrawer li=new ScanLineDrawer(linesColor); if(vertLines) li.setConturePoints(getP1(),getP4(),getP2(),getP3()); else { li.setStartLine(getP1(),getP2()); li.setFinishLine(getP4(),getP3());} li.setStepPercent(stepPercentBetweenLines); return li;} public int getLinesColor() { return linesColor;} public void setLinesColor(int linesColor) { this.linesColor=linesColor;} public boolean isVertLines() { return vertLines;} public void setVertLines(boolean vertLines) { this.vertLines=vertLines;} public int getStepPercentBetweenLines() { return stepPercentBetweenLines;} public void setStepPercentBetweenLines(int stepPercentBetweenLines) { this.stepPercentBetweenLines=stepPercentBetweenLines;}}