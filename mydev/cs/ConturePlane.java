package mydev.cs; import mydev.about.CanvasAdapter; import mydev.about.FourCornersConture2D; import mydev.about.Matrix2D; import mydev.about.PaintAdapter; public abstract class ConturePlane extends FourCornersConture2D implements SeeDifferent { protected boolean contureDrawing; protected PlaneType planeType; public ConturePlane(int borderColor,PlaneType planeType) { super(borderColor); this.contureDrawing=true; this.planeType=planeType;} protected void drawConture(CanvasAdapter ics,PaintAdapter pn) { super.toPen(ics,pn.select(this));} public void represent(Matrix2D matrix) { super.represent(matrix);} public void toPen(CanvasAdapter ics,PaintAdapter pn) { particularDrawing(ics,pn); if(contureDrawing) drawConture(ics,pn);} public abstract void update(Bounds front,Bounds back); public int getBorderColor() { return color;} public void setBorderColor(int borderColor) { this.color=borderColor;} public void enableBorder(boolean enable) { this.contureDrawing=enable;} public PlaneType getPlaneType() { return planeType;} public String toString() { return "ConturePlane [contureDrawing="+contureDrawing+", planeType="+planeType+", p1="+p1+", p2="+p2+", p3="+p3+", p4="+p4+", points="+points+", lastRnd="+lastRnd+", cv="+cv+", colorPicture="+colorPicture+", full="+full+", color="+color+"]";}}