package mydev.uix; import java.awt.BorderLayout; import java.awt.Color; import java.awt.LayoutManager; import java.awt.Panel; import java.awt.TextField; import mydev.about.CanvasAdapter; import mydev.about.ColorsArray; import mydev.about.Graph; import mydev.about.PaintAdapter; import mydev.vutils.AverageRec; public class AveragePanel extends Panel { private TextField tfMin; private TextField tfMax; private TextField tfAvg; private AverageGraphView graph; public AveragePanel() { super(); setLayout(getPanelLayout()); setBackground(getPanelBgColor()); add("West",tfMin=new TextField("",getMinWidth())); tfMin.setEditable(false); add("Center",tfAvg=new TextField("",getAvgWidth())); tfAvg.setEditable(false); add("East",tfMax=new TextField("",getMaxWidth())); tfMax.setEditable(false); add("North",graph=new AverageGraphView(100,25,Color.white,Color.white));} protected int getMinWidth() { return 5-1-1;} protected int getAvgWidth() { return 5+5+5+1;} protected int getMaxWidth() { return 5-1-1;} public Color getPanelBgColor() { return Color.lightGray;} public LayoutManager getPanelLayout() { return new BorderLayout();} public TextField getTfMin() { return tfMin;} public TextField getTfMax() { return tfMax;} public TextField getTfAvg() { return tfAvg;} public void clearPanel() { tfMin.setText(""); tfMax.setText(""); tfAvg.setText("");} public void setMin(String min) { tfMin.setText(min);} public void setMax(String max) { tfMax.setText(max);} public void setAvg(String avg) { tfAvg.setText(avg);} public void updateMinMaxAvg(AverageRec mar) { if(mar.getAverageTime() > 0.f) { tfMin.setText(""+mar.getMinTime()); tfMax.setText(""+mar.getMaxTime()); tfAvg.setText(""+mar.getAverageTime()); graph.notifyAvgChanges(mar);}}} class AverageGraphView extends CommonCanvas { Graph graph; void notifyAvgChanges(AverageRec mar) { graph.updatePoints(mar.getMinTime(),mar.getAverageTime(),mar.getMaxTime()); refreshUpdatable();} public AverageGraphView(int width,int height,Color bgColor,Color borderColor) { super(width,height,bgColor,borderColor);} public void clearItems() { graph.clearPoints();} protected void drawItems(CanvasAdapter ics,PaintAdapter pn) { if(graph==null) { int width=getCcWidth(); int height=getCcHeight(); graph=new Graph(width,height,ColorsArray.orangePoint.ic());} graph.toPen(ics,pn);}}