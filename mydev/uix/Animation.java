package mydev.uix; import java.awt.Component; import java.awt.Image; import mydev.vutils.Spiska; public class Animation { protected int frameDelay=700; protected Spiska frames=new Spiska(); protected long dtPrev=System.currentTimeMillis(); protected int curFrameIdx=0; private int frameCount=0; public Animation(int frameDelay) { super(); this.frameDelay=frameDelay;} public Animation() { super();} public boolean hasReadyFrame() { if(frameCount < 1) return false; long dtCur=System.currentTimeMillis(); if(dtCur-dtPrev >= frameDelay) return true; return false;} public Image nextFrame(Component ctx) { if(frameCount < 1) return null; curFrameIdx++; if(curFrameIdx > frames.size()-1) curFrameIdx=0; dtPrev=System.currentTimeMillis(); return((AnimationFrame) frames.at(curFrameIdx)).getImage(ctx);} public synchronized void addFrame(AnimationFrame af) { frames.append(af); frameCount++;} public synchronized AnimationFrame getCurFrame() { return(AnimationFrame) frames.at(curFrameIdx);} public synchronized void clearFrames() { this.frames=new Spiska(); this.frameCount=0;} public int getFrameCount() { return frameCount;} public int getCurFrameIdx() { return curFrameIdx;} public int getFrameDelay() { return frameDelay;} public void setFrameDelay(int fdd) { if(fdd >= 0) this.frameDelay=fdd;}}