package mydev.uix; import java.awt.Component; import java.awt.Image; import mydev.vutils.Queue; public class Animation { protected int frameDelay=700; protected Queue frames=new Queue(); protected long dtPrev=System.currentTimeMillis(); protected int curFrameIdx=0; public Animation(int frameDelay) { super(); this.frameDelay=frameDelay;} public Animation() { super();} public boolean hasReadyFrame() { if(frames.isEmptyQueue()) return false; long dtCur=System.currentTimeMillis(); if(dtCur-dtPrev >= frameDelay) return true; return false;} public Image nextFrame(Component ctx) { if(frames.sizeOfQueue() > 0 && ctx !=null) { curFrameIdx++; if(curFrameIdx > frames.sizeOfQueue()-1) curFrameIdx=0; dtPrev=System.currentTimeMillis(); AnimationFrame af=(AnimationFrame) frames.getQueueRecord(curFrameIdx); return af.getImage(ctx);} return null;} public void addFrame(AnimationFrame af) { if(af !=null) frames.enqueueQueueRecord(af);} public AnimationFrame getCurFrame() { return(AnimationFrame) frames.getQueueRecord(curFrameIdx);} public void clearFrames() { frames.clearQueue();} public int getFrameCount() { return(int) frames.sizeOfQueue();} public int getCurFrameIdx() { return curFrameIdx;} public int getFrameDelay() { return frameDelay;} public void setFrameDelay(int fdd) { if(fdd >= 0) this.frameDelay=fdd;} public String toString() { return "Animation [frameDelay="+frameDelay+", curFrameIdx="+curFrameIdx+"]";}}