package mydev.uix; import mydev.about.Bitmap; import mydev.about.CanvasAdapter; import mydev.about.PaintAdapter; import mydev.about.Point2D; import mydev.about.Point3D; import mydev.about.Rectangle2D; import mydev.cs.WallsProfile; import mydev.csprofile.AbstractRoomSixWalls; import mydev.csprofile.RoomCOknoProfile; import mydev.csprofile.VisibilityProfile; public abstract class CommonLogo extends CommonCanvas { protected LogoRoom logoRoom; protected Bitmap photo; protected Animation animation; protected CommonLogo(int logoWidth,int logoHeight) { super(logoWidth,logoHeight,Props.bgLogoColor,Props.borderLogoColor);} protected abstract Animation obtainAnimation(); public void refreshUpdatable() { if(animation==null) animation=obtainAnimation(); if(animation.hasReadyFrame()) { photo=animation.nextFrame(); super.refreshUpdatable();}} public void clearItems() {} protected void drawItems(CanvasAdapter ics,PaintAdapter pn) { int SPS=3-1-1+1; Rectangle2D areaWnd=new Rectangle2D(new Point2D(SPS,SPS),sCur.width-SPS-SPS,sCur.height-SPS-SPS); if(logoRoom==null) createRoom(areaWnd); logoRoom.toPen(ics,pn.select(logoRoom).reshape(areaWnd)); if(photo !=null) ics.drawBitmap(photo,1,1,sCur.width-1-1,sCur.height-1-1,pn);} protected void createRoom(Rectangle2D areaWnd) { logoRoom=LogoRoom.createSomeRoom(areaWnd,1-1,400,Props.borderLogoColor.getRGB());}} class LogoRoom extends AbstractRoomSixWalls { public LogoRoom(Point3D uc,int w,int h,int depth,int color,boolean solid,WallsProfile wallsProfile,VisibilityProfile visibilityProfile) { super(uc,w,h,depth,color,solid,wallsProfile,visibilityProfile);} static LogoRoom createSomeRoom(Rectangle2D areaWnd,int z,int depth,int ribsColor) { Point3D uc=new Point3D(areaWnd.w() / 2,areaWnd.h() / 2,z); return new LogoRoom(uc,areaWnd.w(),areaWnd.h(),depth,ribsColor,false,new RoomCOknoProfile(ribsColor),null);}}